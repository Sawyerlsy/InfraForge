upstream backend {
        # 后端节点（支持权重、备份节点）
        server 10.0.1.101:80 weight=5 max_fails=0;  # max_fails=0禁用被动检查冲突
        server 10.0.1.102:80 weight=5;
        server 10.0.1.103:80 backup;  # 主节点全宕时启用备份节点)

        # 健康检查参数优化
        check interval=3000 rise=2 fall=3 timeout=1500 type=http;
        check_keepalive_requests 20;  # 复用TCP连接减少开销
        check_http_send "HEAD /health-check HTTP/1.1\r\nConnection: keep-alive\r\nHost: localhost\r\n\r\n";
        check_http_expect_alive http_2xx;  # 仅接受2xx状态码
    }

server {
    #listen       8000 ssl;
    #server_name  localhost;
    listen       8088;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;

     # ssl证书地址
    #ssl_certificate     /usr/local/nginx/conf/cert/server.crt;  # pem文件的路径
    #ssl_certificate_key  /usr/local/nginx/conf/cert/server.key; # key文件的路径

    # ssl验证相关配置
    #ssl_session_cache    shared:SSL:1m;    # 开启缓存 大小1M
    #ssl_session_timeout  5m;    #缓存有效期
    #ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法

    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
    #ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

    # 限制请求头和请求体大小
    client_max_body_size 1000M; # 允许上传的请求体，默认为1M
    client_header_buffer_size 10k; # 允许客户端请求头，默认为1KB

    # 后台转发
    location / {
        proxy_pass http://backend/;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header backendIP $upstream_addr;
        add_header backendCode $upstream_status;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }
}
